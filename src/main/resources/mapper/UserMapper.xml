<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--useGeneratedKeys="true" keyProperty="uid"以uid字段自增-->
<mapper namespace="com.nathan.store.mapper.UserMapper">
    <!--自定义映射规则
        id: 负责分配唯一的id，对应resultMap=""属性的取值
        type: 类属性，表示数据库中的查询结果与java实体类进行映射
    -->
    <resultMap id="UserEntityMap" type="com.nathan.store.entity.User">
        <!--表字段与类属性不一致的字段需要匹配
            column表属性；property类中的属性
            主键的映射不可省略
        -->
        <result column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (username, password, salt, phone, email, gender, avatar,
                            is_delete, created_user, created_time, modified_user, modified_time)
        VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar},
                #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>
    <!--查询结果为单个或多个对象，需要定义resultType或resultMap（表字段和类对象属性的字段名称不一致）以指定定义映射类的类型-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT *
        FROM t_user
        WHERE username = #{username}
    </select>
    <update id="updatePasswordByUid">
        UPDATE t_user SET password=#{password},
                          modified_user=#{modifiedUser},
                          modified_time=#{modifiedTime} WHERE uid=#{uid}
    </update>
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT *FROM t_user WHERE uid=#{uid}
    </select>
</mapper>